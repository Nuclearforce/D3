{"version":3,"file":"bundle.js","sources":["../src/scripts/colorLegend.js","../src/scripts/loadAndProcessData.js","../src/scripts/lineChart.js","../src/scripts/index.js"],"sourcesContent":["export const colorLegend = (selection, props) =>{\n    const {colorScale\n        ,circleRadius\n        ,spacing    \n        ,textOffset\n    } = props;\n\n    const groups = selection.selectAll('g')\n            .data(colorScale.domain());\n\n    const groupsEnter = groups\n        .enter().append('g')\n        .attr('class','tick');\n\n    groupsEnter.merge(groups)\n            .attr('transform',(d,i)=>\n                `translate(0,${i*spacing})`\n            )\n    groups.exit().remove();\n    \n    groupsEnter.append('circle')\n    .merge(groups.select('circle'))\n        .attr('r',circleRadius)\n        .attr('fill',colorScale);\n\n    groupsEnter.append('text')\n    .merge(groups.select('text'))\n        .text(d=>d)\n        .attr('dy','0.32em')\n        .attr('x',textOffset);\n    }","import {\n    csv\n    ,range\n    ,timeParse\n} from 'd3';\nconst allCaps = str => str=== str.toUpperCase();\nconst isRegion = name => allCaps(name) && name !== 'WORLD';\nexport const parseYear = timeParse('%Y');\nconst melt= (unData,minYear, maxYear) =>{\n\n    const years = range(minYear,maxYear+1);\n    const data = [];\n    unData.forEach(d=>{\n        const name = d['Region, subregion, country or area *'].replace('AND THE', '&');\n        years.forEach(year => {\n            const population = +d[year].replace(/ /g,'')*1000;\n            const row = {\n                year:parseYear(year),\n                name,\n                population\n            };\n            data.push(row);\n        });\n    });\n    return data.filter(d=>isRegion(d.name));\n};\n\nexport const loadAndProcessData=()=>\nPromise.all([\n    csv('https://vizhub.com/curran/datasets/un-population-estimates-2017-medium-variant.csv'),\n    csv('https://vizhub.com/curran/datasets/un-population-estimates-2017.csv')])\n    .then(([unDataMediumVariant, unDataEstimates])=>{\n        return melt(unDataEstimates,1950,2014)\n            .concat(melt(unDataMediumVariant,2015,2100));\n\n   \n});","import {\n    scaleLinear,\n    scaleTime,\n    extent,\n    axisLeft,\n    axisBottom,\n    line,\n    curveBasis,\n\n    format,\n    mouse\n  } from 'd3';\n  \n  import {\n    parseYear\n  } from './loadAndProcessData';\n  \n  export const lineChart = (selection, props) => {\n    const {\n      colorValue,\n      colorScale,\n      yValue,\n      title,\n      xValue,\n      xAxisLabel,\n      circleRadius,\n      yAxisLabel,\n      margin,\n      width,\n      height,\n      data,\n      nested,\n      selectedYear,\n      setSelectedYear\n    } = props;\n  \n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n  \n    const xScale = scaleTime()\n      .domain(extent(data, xValue))\n      .range([0, innerWidth]);\n    \n    const yScale = scaleLinear()\n      .domain(extent(data, yValue))\n      .range([innerHeight, 0])\n      .nice();\n    \n    \n    const g = selection.selectAll('.container').data([null]);\n    const gEnter = g.enter()\n      .append('g')\n        .attr('class', 'container');\n    gEnter.merge(g)\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n    \n    const xAxis = axisBottom(xScale)\n      .tickSize(-innerHeight)\n      .tickPadding(15);\n    \n    const yAxisTickFormat = number =>\n      format('.2s')(number)\n        .replace('G', 'B')\n        .replace('.0', '');\n  \n    const yAxis = axisLeft(yScale)\n      .tickSize(-innerWidth)\n      .tickFormat(yAxisTickFormat)\n      .tickPadding(10);\n    \n    const yAxisGEnter = gEnter\n      .append('g')\n        .attr('class', 'y-axis');\n    const yAxisG = g.select('.y-axis');\n    yAxisGEnter\n      .merge(yAxisG)\n        .call(yAxis)\n        .selectAll('.domain').remove();\n    \n    yAxisGEnter\n      .append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n      .merge(yAxisG.select('.axis-label'))\n        .attr('x', -innerHeight / 2)\n        .text(yAxisLabel);\n    \n    const xAxisGEnter = gEnter\n      .append('g')\n        .attr('class', 'x-axis');\n    const xAxisG = g.select('.x-axis');\n    xAxisGEnter\n      .merge(xAxisG)\n        .call(xAxis)\n        .attr('transform', `translate(0,${innerHeight})`)\n        .select('.domain').remove();\n    \n    xAxisGEnter\n      .append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 80)\n        .attr('fill', 'black')\n      .merge(xAxisG.select('.axis-label'))\n        .attr('x', innerWidth / 2)\n        .text(xAxisLabel);\n    \n    const lineGenerator = line()\n      .x(d => xScale(xValue(d)))\n      .y(d => yScale(yValue(d)))\n      .curve(curveBasis);\n    \n    \n    const linePaths = g.merge(gEnter)\n      .selectAll('.line-path').data(nested);\n    linePaths\n      .enter().append('path')\n        .attr('class', 'line-path')\n      .merge(linePaths)\n        .attr('d', d => lineGenerator(d.values))\n        .attr('stroke', d => colorScale(d.key));\n    \n    const selectedYearDate = parseYear(selectedYear);\n    gEnter\n      .append('line')\n        .attr('class', 'selected-year-line')\n        .attr('y1', 0)\n      .merge(g.select('.selected-year-line'))\n        .attr('x1', xScale(selectedYearDate))\n        .attr('x2', xScale(selectedYearDate))\n        .attr('y2', innerHeight);\n    \n    gEnter\n      .append('text')\n        .attr('class', 'title')\n        .attr('y', -10)\n      .merge(g.select('.title'))\n        .text(title);\n    \n    gEnter\n      .append('rect')\n        .attr('class', 'mouse-interceptor')\n        .attr('fill', 'none')\n        .attr('pointer-events', 'all')\n      .merge(g.select('.mouse-interceptor'))\n        .attr('width', innerWidth)\n        .attr('height', innerHeight)\n        .on('mousemove', function() {\n          const x = mouse(this)[0];\n          const hoveredDate = xScale.invert(x);\n          setSelectedYear(hoveredDate.getFullYear());\n        });\n  };","import {\n  select,\n  scaleOrdinal,\n  nest,\n  schemeCategory10,\n  descending,\n} from 'd3';\n\nimport { colorLegend } from './colorLegend';\nimport {\n  loadAndProcessData,\n} from './loadAndProcessData';\nimport { lineChart } from './lineChart';\n\nconst svg = select('svg');\nconst lineChartG = svg.append('g');\nconst colorLegendG = svg.append('g');\n\nconst width = +svg.attr('width');\nconst height = +svg.attr('height');\n\n// State\nlet selectedYear = 2018;\nlet data;\n\nconst setSelectedYear = year => {\n  selectedYear = year;\n  render();\n};\n\nconst render = () => {\n  const yValue = d => d.population;\n  const colorValue = d => d.name;\n  const colorScale = scaleOrdinal(schemeCategory10);\n  \n  const lastYValue = d =>\n    yValue(d.values[d.values.length - 1]);\n  \n  const nested = nest()\n    .key(colorValue)\n    .entries(data)\n    .sort((a, b) =>\n      descending(lastYValue(a), lastYValue(b))\n    );\n  \n  colorScale.domain(nested.map(d => d.key));\n  \n  lineChartG.call(lineChart, {\n    colorScale,\n    colorValue,\n    yValue,\n    title: 'Population over Time by Region',\n    xValue: d => d.year,\n    xAxisLabel: 'Time',\n    circleRadius: 6,\n    yAxisLabel: 'Population',\n    margin: {\n      top: 60,\n      right: 280,\n      bottom: 88,\n      left: 105\n    },\n    width,\n    height,\n    data,\n    nested,\n    selectedYear,\n    setSelectedYear\n  });\n  \n  colorLegendG\n    .attr('transform', `translate(700,110)`)\n    .call(colorLegend, {\n      colorScale,\n      circleRadius: 10,\n      spacing: 55,\n      textOffset: 15\n    });\n};\n\nloadAndProcessData()\n  .then((loadedData) => {\n    data = loadedData;\n    render();\n  });"],"names":["timeParse","range","csv","scaleTime","extent","scaleLinear","axisBottom","format","axisLeft","line","curveBasis","mouse","select","scaleOrdinal","schemeCategory10","nest","descending"],"mappings":"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"}