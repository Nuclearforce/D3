{"version":3,"file":"bundle.js","sources":["../src/scripts/loadAndProcessData.js","../src/scripts/colorLegend.js","../src/scripts/index.js"],"sourcesContent":["import {\n    csv\n    ,range\n    ,timeParse\n} from 'd3';\nconst allCaps = str => str=== str.toUpperCase();\nconst isRegion = name => allCaps(name) && name !== 'WORLD';\nconst parseYear = timeParse('%Y');\nconst melt= (unData,minYear, maxYear) =>{\n\n    const years = range(minYear,maxYear+1);\n    const data = [];\n    unData.forEach(d=>{\n        const name = d['Region, subregion, country or area *'].replace('AND THE', '&');\n        years.forEach(year => {\n            const population = +d[year].replace(/ /g,'')*1000;\n            const row = {\n                year:parseYear(year),\n                name,\n                population\n            };\n            data.push(row);\n        });\n    });\n    return data.filter(d=>isRegion(d.name));\n};\n\nexport const loadAndProcessData=()=>\nPromise.all([\n    csv('https://vizhub.com/curran/datasets/un-population-estimates-2017-medium-variant.csv'),\n    csv('https://vizhub.com/curran/datasets/un-population-estimates-2017.csv')])\n    .then(([unDataMediumVariant, unDataEstimates])=>{\n        return melt(unDataEstimates,1950,2014)\n            .concat(melt(unDataMediumVariant,2015,2100));\n\n   \n});","export const colorLegend = (selection, props) =>{\n    const {colorScale\n        ,circleRadius\n        ,spacing    \n        ,textOffset\n    } = props;\n\n    const groups = selection.selectAll('g')\n            .data(colorScale.domain());\n\n    const groupsEnter = groups\n        .enter().append('g')\n        .attr('class','tick');\n\n    groupsEnter.merge(groups)\n            .attr('transform',(d,i)=>\n                `translate(0,${i*spacing})`\n            )\n    groups.exit().remove();\n    \n    groupsEnter.append('circle')\n    .merge(groups.select('circle'))\n        .attr('r',circleRadius)\n        .attr('fill',colorScale);\n\n    groupsEnter.append('text')\n    .merge(groups.select('text'))\n        .text(d=>d)\n        .attr('dy','0.32em')\n        .attr('x',textOffset);\n    }","import {\n    select,\n    format,\n    scaleLinear,\n    scaleTime,\n    scaleOrdinal,\n    extent,\n    axisLeft,\n    axisBottom,\n    line,\n    curveBasis,\n    nest,\n    schemeCategory10,\n    descending\n  } from 'd3';\n  import { loadAndProcessData } from './loadAndProcessData';\n  import { colorLegend } from './colorLegend';\n  const svg = select('svg');\n  \n  const width = +svg.attr('width');\n  const height = +svg.attr('height');\n  \n  const render = data => {\n    const title = 'Population over time by region';\n    \n    const xValue = d => d.year;\n    const xAxisLabel = 'Time';\n    \n    const yValue = d => d.population;\n    const circleRadius = 6;\n    const yAxisLabel = 'Population';\n    \n    const colorValue = d => d.name;\n    \n    const margin = { top: 60, right: 210, bottom: 88, left: 105 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n    \n    const xScale = scaleTime()\n      .domain(extent(data, xValue))\n      .range([0, innerWidth]);\n    \n    const yScale = scaleLinear()\n      .domain(extent(data, yValue))\n      .range([innerHeight, 0])\n      .nice();\n    \n    const colorScale = scaleOrdinal(schemeCategory10);\n    \n    const g = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n    \n    const xAxis = axisBottom(xScale)\n      .tickSize(-innerHeight)\n      .tickPadding(15);\n\n    const yAxisTickFormat = number =>\n      format('.2s')(number)\n        .replace('G','B')\n        .replace('.0','');\n        \n    const yAxis = axisLeft(yScale)\n      .tickSize(-innerWidth)\n      .tickFormat(yAxisTickFormat)\n      .tickPadding(10);\n    \n    const yAxisG = g.append('g').call(yAxis);\n    yAxisG.selectAll('.domain').remove();\n    \n    yAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', -60)\n        .attr('x', -innerHeight / 2)\n        .attr('fill', 'black')\n        .attr('transform', `rotate(-90)`)\n        .attr('text-anchor', 'middle')\n        .text(yAxisLabel);\n    \n    const xAxisG = g.append('g').call(xAxis)\n      .attr('transform', `translate(0,${innerHeight})`);\n    \n    xAxisG.select('.domain').remove();\n    \n    xAxisG.append('text')\n        .attr('class', 'axis-label')\n        .attr('y', 80)\n        .attr('x', innerWidth / 2)\n        .attr('fill', 'black')\n        .text(xAxisLabel);\n    \n    const lineGenerator = line()\n      .x(d => xScale(xValue(d)))\n      .y(d => yScale(yValue(d)))\n      .curve(curveBasis);\n    \n    const lastYValue = d =>\n      yValue(d.values[d.values.length - 1]);\n    \n    const nested = nest()\n      .key(colorValue)\n      .entries(data)\n      .sort((a, b) =>\n        descending(lastYValue(a), lastYValue(b))\n      );\n    \n    //console.log(nested);\n    \n    colorScale.domain(nested.map(d => d.key));\n    \n    g.selectAll('.line-path').data(nested)\n      .enter().append('path')\n        .attr('class', 'line-path')\n        .attr('d', d => lineGenerator(d.values))\n        .attr('stroke', d => colorScale(d.key));\n    \n    g.append('text')\n        .attr('class', 'title')\n        .attr('y', -10)\n        .text(title);\n    \n    svg.append('g')\n      .attr('transform', `translate(780,121)`)\n      .call(colorLegend, {\n        colorScale,\n        circleRadius: 13,\n        spacing: 50,\n        textOffset: 17\n      });\n  };\n  \n  loadAndProcessData()\n    .then(render);"],"names":["timeParse","range","csv","select","scaleTime","extent","scaleLinear","scaleOrdinal","schemeCategory10","axisBottom","format","axisLeft","line","curveBasis","nest","descending"],"mappings":"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"}